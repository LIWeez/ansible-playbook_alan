input {
  pipeline { 
    address => "nginx.access"
  }
  dead_letter_queue {
    path => "/var/lib/logstash/dead_letter_queue"
    commit_offsets => true
    pipeline_id => "nginx.access"
    tags => ["dlq"]
  }
}

filter {
  if "dlq" in [tags] {
    mutate {
      add_field => {
      "reason" => "%{[@metadata][dead_letter_queue][reason]}"
      "plugin_id" => "%{[@metadata][dead_letter_queue][plugin_id]}"
      "plugin_type" => "%{[@metadata][dead_letter_queue][plugin_type]}"
      }
    }
  }
  else {
    grok {
      match => {
        "message" => "%{REMOTE_ADDR:remote_addr} - (%{REMOTE_USER:remote_user}|-) \[%{TIME_LOCAL:timestamp}\] \"%{HTTP_METHOD:http_method} %{URI_PATH:uri_path} HTTP/%{NUMBER:http_version}\" %{HTTP_STATUS:http_status} %{BYTES_SENT:bytes_sent} \"%{HTTP_REFER:http_refer}\" \"%{HTTP_USER_AGENT:http_user_agent}\" \"%{HTTP_X_FORWARDED_FOR:http_x_forwarded_for}\" \"%{REQUEST_TIME:request_time}\" \"%{UPSTREAM_RESPONSE_TIME:upstream_response_time}\" domain:\"(%{HTTP_DOMAIN:http_domain}|-)\" sid:\"(%{HTTP_SESSION_ID:http_session_id}|-)\"%{SPACE}(?:trace_id:\"(%{TRACE_ID:trace_id}|-)\")?%{SPACE}(?:host:\"(%{HTTP_HOST_NAME:http_host_name}|-)\")?"
      }

      pattern_definitions => {
          "REMOTE_ADDR" => "[^ ]+"
          "REMOTE_USER" => "[^ ]+"
          "TIME_LOCAL" => "[^\]]+"
          "HTTP_METHOD" => "[^ ]+"
          "URI_PATH" => "[^ ]+"
          "HTTP_STATUS" => "[^ ]+"
          "BYTES_SENT" => "[^ ]+"
          "HTTP_REFER" => "[^\"]+"
          "HTTP_USER_AGENT" => "[^\"]+"
          "HTTP_X_FORWARDED_FOR" => "[^\"]+"
          "REQUEST_TIME" => "[^\"]+"
          "UPSTREAM_RESPONSE_TIME" => "[^\"]+"
          "HTTP_DOMAIN" => "[^\"]*"
          "HTTP_SESSION_ID" => "[^\"]*"
          "SPACE" => "[ ]*"
          "TRACE_ID" => "[^ ]*"
          "HTTP_HOST_NAME" => "[^ ]*"
      }
    }
    date {
      match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
      timezone => "Asia/Taipei"
      target => "@timestamp"
    }
    mutate {
      remove_field => [ "timestamp" ]
    }
  }
}

output {
  if "dlq" in [tags]{
    elasticsearch {
      ssl => true
      ssl_certificate_verification => true
      manage_template => false
      cacert => '/etc/logstash/certs/http_ca.crt'
      hosts => [""]
      user => ""
      password => ""
      template_name => "dead-letter-queue"
      ilm_enabled => "true"
      ilm_rollover_alias => "dead-letter-queue"
      ilm_pattern => "000001"
      ilm_policy => "bbin"  
    }
  }
  if [fields][app] == "web" {
    elasticsearch {
      ssl => true
      ssl_certificate_verification => true
      manage_template => false
      cacert => '/etc/logstash/certs/http_ca.crt'
      hosts => [""]
      user => ""
      password => ""
      ilm_rollover_alias => "web.nginx.access"
      ilm_pattern => "000001"
      ilm_policy => "bbin"
      }
  }
}
